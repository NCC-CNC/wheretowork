% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/class_Dataset.R
\name{new_dataset_from_auto}
\alias{new_dataset_from_auto}
\title{New dataset from automatic calculations}
\usage{
new_dataset_from_auto(x, skip_bm = FALSE, id = uuid::UUIDgenerate())
}
\arguments{
\item{x}{\code{\link[sf:sf]{sf::st_sf()}} or \code{\link[raster:stack]{raster::stack()}} object.}

\item{skip_bm}{\code{\link{logical}} skip generating boundary data?
(See details for more information)}

\item{id}{\code{character} unique identifier.
Defaults to a random identifier (\code{\link[uuid:UUIDgenerate]{uuid::UUIDgenerate()}}).}
}
\value{
A \link{Dataset} object.
}
\description{
Create a new \link{Dataset} object by automatically calculating
all metadata from the underlying data.
This function is useful when pre-calculated metadata are not available.
Note this function will take longer to create variables than other
functions because it requires performing geospatial operations.
}
\details{
Create a new \link{Dataset} object.

For spatial uploads (shapefile) with many planning units, building
boundary data can result in a std::bad_alloc error. To avoid this, the
user can skip generating a boundary matrix by setting \code{skip_bm = TRUE}.
}
\examples{
# find example data
f <- system.file(
  "extdata", "projects", "sim_raster", "sim_raster_spatial.tif",
  package = "wheretowork"
)

# import data
r <- suppressWarnings(raster::raster(f))
r <- raster::stack(r, r * 2, r * 3, r * 4)

# create new dataset
d <- new_dataset_from_auto(r)

# print object
print(d)
}
