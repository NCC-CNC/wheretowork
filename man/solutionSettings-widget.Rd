% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/solutionSettings.R
\name{solutionSettings}
\alias{solutionSettings}
\title{Solution settings widget}
\usage{
solutionSettings(x, width = NULL, height = NULL, elementId = NULL)
}
\arguments{
\item{x}{\link{SolutionSettings} object.}

\item{width}{\code{character} width of the displayed widget.
Defaults to \code{NULL} such that the widget is automatically sized.}

\item{height}{\code{character} width of the displayed widget.
Defaults to \code{NULL} such that the widget is automatically sized.}

\item{elementId}{\code{character} HTML identifier for the widget.
Defaults to \code{NULL}.}
}
\description{
Constructs a widget for managing the settings for generating solutions.
}
\section{Server value}{

The widget sends a \code{list} with the following values to the server:

\describe{

\item{id}{\code{character} identifier for the theme or weight.}

\item{setting}{\code{character} name of the updated setting.
Available options include: \code{"status"}, \code{"factor"}, or \code{"goal"}.}

\item{value}{new \code{numeric} or \code{logical} values.}

\item{type}{\code{character} indicating if the updated setting corresponds
to a \code{theme} or \code{weight}.}

}

The widget also contains a text box. The server value for this
text box is a \code{character} string, and it can be queried using
\code{id_name} where \code{id} is the argument to \code{elementId}.

Additionally, the widget contains a button. The server value for this
button is an \code{integer} indicating the number of times the button
has been clicked, and it can be queried using \code{id_button} where
where \code{id} is the argument to \code{elementId}.
}

\examples{
\dontrun{
# run Shiny app to demo the sidebar pane
if (interactive()) {
  runExample("solutionSettings")
}
}

}
