% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SingleTheme-class.R
\name{new_single_theme}
\alias{new_single_theme}
\title{New single theme}
\usage{
new_single_theme(
  name,
  feature,
  mandatory = FALSE,
  round = TRUE,
  icon = "map-marked-alt",
  id = uuid::UUIDgenerate()
)
}
\arguments{
\item{name}{\code{character} Name to display.}

\item{feature}{\link{Feature} object.
For compatibility with \code{\link[=new_multi_theme]{new_multi_theme()}}, a \code{list} object
can also be supplied that contains a single \link{Feature} object.}

\item{mandatory}{\code{logical} Is the theme mandatory for generating solutions?
Defaults to \code{FALSE}.}

\item{round}{\code{logical} should all numbers be rounded to the nearest integer?
Defaults to \code{TRUE}.}

\item{icon}{\code{shiny.tag} Icon to display for the feature
This icon should indicate the type of data that underpin the feature.
Alternatively, the argument can be a \code{character} to automatically
generate a \code{shiny.tag} icon (using \code{\link[shiny:icon]{shiny::icon()}}).
Defaults to \code{"map-marked-alt"}.}

\item{id}{\code{character} unique identifier.
Defaults to a random identifier (\code{\link[uuid:UUIDgenerate]{uuid::UUIDgenerate()}}).}
}
\value{
A \link{SingleTheme} object.
}
\description{
Create a new \link{SingleTheme} object.
}
\examples{
# find data path
f <- system.file("extdata", "sim_raster_data.tif", package = "locationmisc")

# create new dataset
d <- new_dataset(f)

# create new variable
v <- new_variable_from_auto(d, index = 1)

# create new feature
f <- new_feature(name = "Intact Alvar", variable = v)

# create a theme using the single feature
st <- new_single_theme(name = "Intact Alvar", feature = f)

# print object
print(st)

}
