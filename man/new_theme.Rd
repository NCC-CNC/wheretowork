% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/class_Theme.R
\name{new_theme}
\alias{new_theme}
\title{New theme}
\usage{
new_theme(
  name,
  feature,
  feature_order = as.double(rev(seq_along(feature))),
  id = uuid::UUIDgenerate()
)
}
\arguments{
\item{name}{\code{character} Name to display.}

\item{feature}{\code{list} of \link{Feature} objects.}

\item{feature_order}{\code{numeric} Relative order for displaying each feature
on a map. Defaults to a reverse sequence of integer values.}

\item{id}{\code{character} unique identifier.
Defaults to a random identifier (\code{\link[uuid:UUIDgenerate]{uuid::UUIDgenerate()}}).}
}
\value{
A \link{Theme} object.
}
\description{
Create a new \link{Theme} object.
}
\examples{
# find data path
# find data file paths
f1 <- system.file(
  "extdata", "projects", "sim_raster", "sim_raster_spatial.tif",
  package = "wheretowork"
)
f2 <- system.file(
  "extdata",  "projects", "sim_raster", "sim_raster_attribute.csv.gz",
  package = "wheretowork"
)
f3 <- system.file(
  "extdata",  "projects", "sim_raster", "sim_raster_boundary.csv.gz",
  package = "wheretowork"
)

# create new dataset
d <- new_dataset(f1, f2, f3)

# create new variable
v <- new_variable_from_auto(d, index = 1)

# create new feature
f <- new_feature(name = "Intact Alvar map", variable = v)

# create a theme using the feature
x <- new_theme(name = "Intact Alvar", feature = f)

# print object
print(x)
}
