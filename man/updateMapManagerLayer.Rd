% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/widget_mapManager_server.R
\name{updateMapManagerLayer}
\alias{updateMapManagerLayer}
\title{Update a layer in a map manager widget}
\usage{
updateMapManagerLayer(
  session = shiny::getDefaultReactiveDomain(),
  inputId,
  value
)
}
\arguments{
\item{session}{The \code{session} object passed to function given to
\code{shinyServer} Default is \code{\link[shiny:domains]{shiny::getDefaultReactiveDomain()}}.}

\item{inputId}{\code{character} The identifier of the input object.}

\item{value}{\code{list} Object containing the new settings (see Details).}
}
\description{
Change the layer for a map manager widget on the client.
}
\details{
\subsection{Overview}{

The argument to \code{value} should be \code{list} object containing
the information necessary to update a layer.
Broadly speaking, it should contain the following elements:

\describe{
\item{id}{\code{character} value with the identifier for the layer.}
\item{setting}{\code{character} value with the name of the setting to update.}
\item{value}{\code{ANY} new value for the setting.}
}

Note that the \code{value} element in the \code{list} object should have a
class (i.e. \code{numeric}, \code{logical}) that is relevant
to the setting that should be updated. For example, if the
\code{setting} element is equal to \code{name}, then the \code{value} element
should contain a \code{character} value.
For reference, we provide examples detailing all the various settings that
can be updated below.

\strong{Update layer name.}
This controls the bold text shown in the header of the layer.

\describe{
\item{id}{\code{"LAYERID"}}
\item{setting}{\code{"name"}}
\item{value}{\code{"SPECIES"}}
}

\strong{Update layer visibility.}
This controls the visible checkbox for a layer.
Note that the \code{value} element must be a \code{logical} (\code{TRUE} or \code{FALSE}) value

\describe{
\item{id}{\code{"LAYERID"}}
\item{setting}{\code{"visible"}}
\item{value}{\code{TRUE}}
}

\strong{Update the visibility of features within a layer.}
This controls the visible checkbox for each feature within a theme.
Note that the \code{value} element must have a value for each feature
within the theme (the example below assumes the theme has three features).

\describe{
\item{id}{\code{"LAYERID"}}
\item{setting}{\code{"feature_visible"}}
\item{value}{\code{c(TRUE, FALSE, TRUE)}}
}

\strong{Update the order of features within a layer.}
This controls the relative order of the features within a theme.
Note that the \code{value} element must have a value for each dataset
within a layer (e.g. the example below assumes a theme has three features).

\describe{
\item{id}{\code{"LAYERID"}}
\item{setting}{\code{"feature_order"}}
\item{value}{\code{c(TRUE, FALSE, TRUE)}}
}
}
}
\seealso{
\code{\link[=mapManager]{mapManager()}}.
}
