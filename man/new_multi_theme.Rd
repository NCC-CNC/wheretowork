% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MultiTheme-class.R
\name{new_multi_theme}
\alias{new_multi_theme}
\title{New multi-theme}
\usage{
new_multi_theme(
  name,
  feature,
  mandatory = FALSE,
  round = TRUE,
  icon = "map-marked-alt",
  current_label = "Current",
  feature_order = as.double(rev(seq_along(feature))),
  id = uuid::UUIDgenerate()
)
}
\arguments{
\item{name}{\code{character} Name to display.}

\item{feature}{\code{list} of \link{Feature} objects.}

\item{mandatory}{\code{logical} Is the theme mandatory for generating solutions?
Defaults to \code{FALSE}.}

\item{round}{\code{logical} should all numbers be rounded to the nearest integer?
Defaults to \code{TRUE}.}

\item{icon}{\code{shiny.tag} Icon to display for the feature
This icon should indicate the type of data that underpin the feature.
Alternatively, the argument can be a \code{character} to automatically
generate a \code{shiny.tag} icon (using \code{\link[shiny:icon]{shiny::icon()}}).
Defaults to \code{"map-marked-alt"}.}

\item{current_label}{\code{character} The display label for the current
level of representation for the features under the group view.
Defaults to \code{Current}.}

\item{feature_order}{\code{numeric} Relative order for displaying each feature
on a map. Defaults to a reverse sequence of integer values.}

\item{id}{\code{character} unique identifier.
Defaults to a random identifier (\code{\link[uuid:UUIDgenerate]{uuid::UUIDgenerate()}}).}
}
\value{
A \link{MultiTheme} object.
}
\description{
Create a new \link{MultiTheme} object.
}
\examples{
# find data path
f <- system.file("extdata", "sim_raster_data.tif", package = "locationmisc")

# create new dataset
d <- new_dataset(f)

# create new variable
v1 <- new_variable_from_auto(d, index = 1)
v2 <- new_variable_from_auto(d, index = 2)
v3 <- new_variable_from_auto(d, index = 3)

# create new features
f1 <- new_feature(name = "Pangolin", variable = v1)
f2 <- new_feature(name = "Panda", variable = v2)
f3 <- new_feature(name = "Palms", variable = v3)

# create a theme using the features
mt <- new_multi_theme(
  name = "Endangered species", feature = list(f1, f2, f3))

# print object
print(mt)

}
