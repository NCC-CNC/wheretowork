% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/class_SingleTheme.R
\name{SingleTheme}
\alias{SingleTheme}
\title{SingleTheme class}
\description{
SingleTheme class

SingleTheme class
}
\details{
Definition for the SingleTheme class.

The relative order is fixed at 1 because each this class
only contains a single feature.
}
\seealso{
\code{\link[=new_single_theme]{new_single_theme()}}.
}
\section{Super class}{
\code{\link[wheretowork:Theme]{wheretowork::Theme}} -> \code{SingleTheme}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{SingleTheme$new()}}
\item \href{#method-get_feature_order}{\code{SingleTheme$get_feature_order()}}
\item \href{#method-set_feature_order}{\code{SingleTheme$set_feature_order()}}
\item \href{#method-get_solution_settings_widget_data}{\code{SingleTheme$get_solution_settings_widget_data()}}
\item \href{#method-get_map_manager_widget_data}{\code{SingleTheme$get_map_manager_widget_data()}}
\item \href{#method-clone}{\code{SingleTheme$clone()}}
}
}
\if{html}{
\out{<details ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="wheretowork" data-topic="Theme" data-id="export">}\href{../../wheretowork/html/Theme.html#method-export}{\code{wheretowork::Theme$export()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="wheretowork" data-topic="Theme" data-id="get_feature_current">}\href{../../wheretowork/html/Theme.html#method-get_feature_current}{\code{wheretowork::Theme$get_feature_current()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="wheretowork" data-topic="Theme" data-id="get_feature_goal">}\href{../../wheretowork/html/Theme.html#method-get_feature_goal}{\code{wheretowork::Theme$get_feature_goal()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="wheretowork" data-topic="Theme" data-id="get_feature_id">}\href{../../wheretowork/html/Theme.html#method-get_feature_id}{\code{wheretowork::Theme$get_feature_id()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="wheretowork" data-topic="Theme" data-id="get_feature_limit">}\href{../../wheretowork/html/Theme.html#method-get_feature_limit}{\code{wheretowork::Theme$get_feature_limit()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="wheretowork" data-topic="Theme" data-id="get_feature_name">}\href{../../wheretowork/html/Theme.html#method-get_feature_name}{\code{wheretowork::Theme$get_feature_name()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="wheretowork" data-topic="Theme" data-id="get_feature_status">}\href{../../wheretowork/html/Theme.html#method-get_feature_status}{\code{wheretowork::Theme$get_feature_status()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="wheretowork" data-topic="Theme" data-id="get_feature_total">}\href{../../wheretowork/html/Theme.html#method-get_feature_total}{\code{wheretowork::Theme$get_feature_total()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="wheretowork" data-topic="Theme" data-id="get_feature_visible">}\href{../../wheretowork/html/Theme.html#method-get_feature_visible}{\code{wheretowork::Theme$get_feature_visible()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="wheretowork" data-topic="Theme" data-id="get_layer_index">}\href{../../wheretowork/html/Theme.html#method-get_layer_index}{\code{wheretowork::Theme$get_layer_index()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="wheretowork" data-topic="Theme" data-id="get_layer_name">}\href{../../wheretowork/html/Theme.html#method-get_layer_name}{\code{wheretowork::Theme$get_layer_name()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="wheretowork" data-topic="Theme" data-id="get_setting">}\href{../../wheretowork/html/Theme.html#method-get_setting}{\code{wheretowork::Theme$get_setting()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="wheretowork" data-topic="Theme" data-id="get_visible">}\href{../../wheretowork/html/Theme.html#method-get_visible}{\code{wheretowork::Theme$get_visible()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="wheretowork" data-topic="Theme" data-id="print">}\href{../../wheretowork/html/Theme.html#method-print}{\code{wheretowork::Theme$print()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="wheretowork" data-topic="Theme" data-id="render_on_map">}\href{../../wheretowork/html/Theme.html#method-render_on_map}{\code{wheretowork::Theme$render_on_map()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="wheretowork" data-topic="Theme" data-id="repr">}\href{../../wheretowork/html/Theme.html#method-repr}{\code{wheretowork::Theme$repr()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="wheretowork" data-topic="Theme" data-id="set_feature_current">}\href{../../wheretowork/html/Theme.html#method-set_feature_current}{\code{wheretowork::Theme$set_feature_current()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="wheretowork" data-topic="Theme" data-id="set_feature_goal">}\href{../../wheretowork/html/Theme.html#method-set_feature_goal}{\code{wheretowork::Theme$set_feature_goal()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="wheretowork" data-topic="Theme" data-id="set_feature_status">}\href{../../wheretowork/html/Theme.html#method-set_feature_status}{\code{wheretowork::Theme$set_feature_status()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="wheretowork" data-topic="Theme" data-id="set_feature_visible">}\href{../../wheretowork/html/Theme.html#method-set_feature_visible}{\code{wheretowork::Theme$set_feature_visible()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="wheretowork" data-topic="Theme" data-id="set_setting">}\href{../../wheretowork/html/Theme.html#method-set_setting}{\code{wheretowork::Theme$set_setting()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="wheretowork" data-topic="Theme" data-id="set_visible">}\href{../../wheretowork/html/Theme.html#method-set_visible}{\code{wheretowork::Theme$set_visible()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="wheretowork" data-topic="Theme" data-id="update_on_map">}\href{../../wheretowork/html/Theme.html#method-update_on_map}{\code{wheretowork::Theme$update_on_map()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Create a SingleTheme object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SingleTheme$new(id, name, feature)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{\code{character} value.}

\item{\code{name}}{\code{character} value.}

\item{\code{feature}}{\code{list} of a single \link{Feature} object.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new SingleTheme object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_feature_order"></a>}}
\if{latex}{\out{\hypertarget{method-get_feature_order}{}}}
\subsection{Method \code{get_feature_order()}}{
Get relative order for displaying each feature on a map.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SingleTheme$get_feature_order()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
\code{numeric} value.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-set_feature_order"></a>}}
\if{latex}{\out{\hypertarget{method-set_feature_order}{}}}
\subsection{Method \code{set_feature_order()}}{
Set relative order for displaying features on a map.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SingleTheme$set_feature_order(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{not used.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_solution_settings_widget_data"></a>}}
\if{latex}{\out{\hypertarget{method-get_solution_settings_widget_data}{}}}
\subsection{Method \code{get_solution_settings_widget_data()}}{
Get data for displaying the theme in a \link{solutionSettings} widget.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SingleTheme$get_solution_settings_widget_data()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
\code{list} with widget data.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_map_manager_widget_data"></a>}}
\if{latex}{\out{\hypertarget{method-get_map_manager_widget_data}{}}}
\subsection{Method \code{get_map_manager_widget_data()}}{
Get data for displaying the theme in a \code{\link[=mapManager]{mapManager()}} widget.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SingleTheme$get_map_manager_widget_data()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
\code{list} with widget data.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SingleTheme$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
