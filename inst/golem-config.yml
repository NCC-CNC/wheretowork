default:
  # golem variables
  golem_name: wheretowork
  golem_version: 0.0.0.9000
  app_prod: no

  # app variables
  ## mode for importing projects
  ## available options include: "advanced", "beginner", and "project"
  mode: "project"

  ## directory containing the projects
  ## "default" = system.file("extdata", "projects", package = "wheretowork")
  projects: "default"

  ## future plan strategy
  ### if "auto", then:
  ###   if on Shiny apps (per R_CONFIG_ACTIVE variable): "multicore"
  ###   else if on Unix systems: "multicore"
  ###   else "multisession"
  strategy: "auto"

  ## verbosity
  verbose: false

  ## monitor memory usage
  monitor: false

  ## optimality gap
  solver_gap_1: 0.1 # 10% from optimality for initial optimization
  solver_gap_2: 0.5 # 50% from optimality for spatial clustering optimization

  ## time limit (seconds) for generating solutions
  ## i.e. maximum time that users should wait for when generating solutions
  solver_time_limit_1: 3600 # one hour for generating initial solution
  solver_time_limit_2: 300 # 5 minutes for spatial clustering optimization

  ## time out (seconds) for worker processes
  ## i.e. maximum time that worker process should remain active after
  ## contacting controller process
  worker_time_out: 7200 # two hours

  ## contact details
  default_project_name: "Richard Schuster"
  default_project_email: "richard.schuster@natureconservancy.ca"

# development configuration
dev:
  golem_wd: !expr here::here()
  GRB_LICENSE_FILE: "C:/gurobi/gurobi.lic"

# production configurations
beginner:
  mode: "beginner"
  projects: "/projects"
  strategy: "auto"
  verbose: false
  monitor: false

advanced:
  mode: "advanced"
  projects: "/projects"
  strategy: "auto"
  verbose: false
  monitor: false

project:
  mode: "project"
  projects: "/projects"
  strategy: "auto"
  verbose: false
  monitor: false
